---
description: 
globs: *.tsx
alwaysApply: false
---

# Your rule content

When passing a function from a child to a parent (or from a lower-level module to a higher-level module) via `onClick`, `onUpdate`, or similar props/parameters, the function that ultimately runs at the top level should be named using the **`handleX`** convention (e.g., `handleClick`).  

Any intermediary function that passes it along should be named using the **`onX`** convention (e.g., `onClick`).  

This rule applies **not only to React but also to any JavaScript/TypeScript environment**, including:
- **Bun** (e.g., when passing functions between modules)  
- **Node.js** (e.g., event listeners, API request handlers)  
- **Frontend frameworks like Next.js, Vue, or Svelte**  
- **General JavaScript projects following structured function-passing patterns**  

## **Example: Correct Usage in a React Component**
```jsx
function ParentComponent() {
  const handleButtonClick = () => {
    console.log("Button clicked in child, handled in parent!");
  };

  return <ChildComponent onClick={handleButtonClick} />;
}

function ChildComponent({ onClick }) {
  return <button onClick={onClick}>Click Me</button>;
}
